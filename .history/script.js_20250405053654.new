import { createClient } from 'https://cdn.jsdelivr.net/npm/@supabase/supabase-js@2/+esm'

document.addEventListener('DOMContentLoaded', () => {
    const imageFeed = document.getElementById('image-feed');
    const widgetContainer = document.getElementById('widget-container');
    const submitForm = document.getElementById('submit-form');

    // Initialize Supabase client
    const supabaseUrl = 'https://ibpnwppmlvlizuuxland.supabase.co';
    const supabaseAnonKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6ImlicG53cHBtbHZsaXp1dXhsYW5kIiwicm9sZSI6ImFub24iLCJpYXQiOjE3NDMyNTcwMDAsImV4cCI6MjA1ODgzMzAwMH0.ZKlskNFBzS-tiIblQZJtSbDdva_X-sR2FE0aZaD56_A';
    const supabase = createClient(supabaseUrl, supabaseAnonKey);
    const submissionMessage = document.getElementById('submission-message');
    const embedInstructions = document.getElementById('embed-instructions');
    const copyEmbedButton = document.getElementById('copy-embed');
    const embedCodeTextarea = document.getElementById('embed-code');

    // Windows 98 style alert function
    function win98Alert(message) {
        // Create alert container
        const alertContainer = document.createElement('div');
        alertContainer.style.position = 'fixed';
        alertContainer.style.top = '50%';
        alertContainer.style.left = '50%';
        alertContainer.style.transform = 'translate(-50%, -50%)';
        alertContainer.style.zIndex = '9999';
        
        // Create Windows 98 style box
        const win98Box = document.createElement('div');
        win98Box.style.border = '2px solid';
        win98Box.style.borderColor = '#ffffff #808080 #808080 #ffffff';
        win98Box.style.backgroundColor = '#c0c0c0';
        win98Box.style.boxShadow = '2px 2px 0px rgba(0,0,0,0.5)';
        win98Box.style.padding = '2px';
        win98Box.style.width = '300px';
        
        // Create title bar
        const titleBar = document.createElement('div');
        titleBar.style.background = 'linear-gradient(90deg, #000080, #1084d0)';
        titleBar.style.color = 'white';
        titleBar.style.fontWeight = 'bold';
        titleBar.style.padding = '3px 5px';
        titleBar.style.display = 'flex';
        titleBar.style.justifyContent = 'space-between';
        titleBar.style.alignItems = 'center';
        titleBar.innerHTML = '<span>THE UNDERWEB</span><span>X</span>';
        
        // Create content area
        const contentArea = document.createElement('div');
        contentArea.style.padding = '15px';
        contentArea.style.backgroundColor = '#c0c0c0';
        contentArea.style.textAlign = 'center';
        
        // Add message
        const messageText = document.createElement('p');
        messageText.textContent = message;
        messageText.style.margin = '0 0 15px 0';
        
        // Add OK button
        const okButton = document.createElement('button');
        okButton.textContent = 'OK';
        okButton.style.padding = '5px 20px';
        okButton.style.border = '2px solid';
        okButton.style.borderColor = '#ffffff #808080 #808080 #ffffff';
        okButton.style.backgroundColor = '#c0c0c0';
        okButton.style.cursor = 'pointer';
        
        okButton.addEventListener('click', () => {
            document.body.removeChild(alertContainer);
        });
        
        // Assemble the alert
        contentArea.appendChild(messageText);
        contentArea.appendChild(okButton);
        win98Box.appendChild(titleBar);
        win98Box.appendChild(contentArea);
        alertContainer.appendChild(win98Box);
        
        // Add to body
        document.body.appendChild(alertContainer);
    }

    // Function to fetch images from Supabase
    async function fetchImages() {
        const { data, error } = await supabase
            .from('submissions')
            .select('image_url, site_link, tags');

        if (error) {
            console.error('Error fetching images:', error);
            return [];
        }
        return data;
    }

    // Function to create image items for the feed
    function createImageItem(image) {
        const item = document.createElement('div');
        item.classList.add('image-item');

        const img = document.createElement('img');
        img.src = image.image_url || image.src;
        img.alt = image.tags || image.alt;

        const tagsDiv = document.createElement('div');
        tagsDiv.classList.add('tags');
        if (Array.isArray(image.tags)) {
            tagsDiv.textContent = image.tags.join(', ');
        } else if (typeof image.tags === 'string') {
            tagsDiv.textContent = image.tags;
        }

        const link = document.createElement('a');
        link.href = image.site_link || image.link;
        link.target = '_blank'; // Open link in new tab
        link.appendChild(img);

        item.appendChild(link);
        item.appendChild(tagsDiv);

        return item;
    }

    // Function to populate the image feed
    async function populateImageFeed() {
        if (!imageFeed) return;
        
        imageFeed.innerHTML = ''; // Clear existing feed
        
        // Add loading message
        const loadingMsg = document.createElement('div');
        loadingMsg.textContent = 'Loading images...';
        loadingMsg.style.textAlign = 'center';
        loadingMsg.style.padding = '20px';
        imageFeed.appendChild(loadingMsg);
        
        try {
            const imagesFromSupabase = await fetchImages();
            
            // Clear loading message
            imageFeed.innerHTML = '';
            
            if (imagesFromSupabase.length === 0) {
                // Add placeholder images if no data
                const placeholders = [
                    { src: 'https://via.placeholder.com/200/c0c0c0/000000?text=THE+UNDERWEB+1', link: '#', tags: 'placeholder, web1.0, retro' },
                    { src: 'https://via.placeholder.com/200/c0c0c0/000000?text=THE+UNDERWEB+2', link: '#', tags: 'placeholder, windows98, aesthetic' },
                    { src: 'https://via.placeholder.com/200/c0c0c0/000000?text=THE+UNDERWEB+3', link: '#', tags: 'placeholder, neocities, webring' },
                    { src: 'https://via.placeholder.com/200/c0c0c0/000000?text=THE+UNDERWEB+4', link: '#', tags: 'placeholder, pixel, art' },
                    { src: 'https://via.placeholder.com/200/c0c0c0/000000?text=THE+UNDERWEB+5', link: '#', tags: 'placeholder, vaporwave, glitch' },
                    { src: 'https://via.placeholder.com/200/c0c0c0/000000?text=THE+UNDERWEB+6', link: '#', tags: 'placeholder, indie, web' }
                ];
                
                placeholders.forEach(image => {
                    imageFeed.appendChild(createImageItem(image));
                });
            } else {
                imagesFromSupabase.forEach(image => {
                    imageFeed.appendChild(createImageItem(image));
                });
            }
        } catch (error) {
            console.error('Error loading images:', error);
            imageFeed.innerHTML = '<div style="text-align: center; padding: 20px;">Error loading images. Please try again later.</div>';
        }
    }

    // Widget functionality
    async function createWidget() {
        const widgetStrip = document.getElementById('widget-strip');
        if (!widgetStrip) return;
        
        widgetStrip.innerHTML = ''; // Clear existing widget images

        try {
            const imagesFromSupabase = await fetchImages();
            
            // Use placeholder images if no data
            const imagesToUse = imagesFromSupabase.length > 0 ? imagesFromSupabase : [
                { image_url: 'https://via.placeholder.com/80/c0c0c0/000000?text=W1', site_link: '#', tags: 'placeholder' },
                { image_url: 'https://via.placeholder.com/80/c0c0c0/000000?text=W2', site_link: '#', tags: 'placeholder' },
                { image_url: 'https://via.placeholder.com/80/c0c0c0/000000?text=W3', site_link: '#', tags: 'placeholder' },
                { image_url: 'https://via.placeholder.com/80/c0c0c0/000000?text=W4', site_link: '#', tags: 'placeholder' },
                { image_url: 'https://via.placeholder.com/80/c0c0c0/000000?text=W5', site_link: '#', tags: 'placeholder' }
            ];
            
            // Display a subset of random images in the widget
            const shuffledImages = [...imagesToUse].sort(() => 0.5 - Math.random()); // Shuffle images
            const widgetImages = shuffledImages.slice(0, Math.min(5, shuffledImages.length)); // Display up to 5 random images

            widgetImages.forEach(image => {
                const widgetImage = document.createElement('img');
                widgetImage.src = image.image_url; // Use image_url from Supabase data
                widgetImage.alt = image.tags; // Use tags for alt text
                widgetImage.classList.add('widget-image');
                widgetImage.addEventListener('click', () => {
                    window.open(image.site_link, '_blank'); // Use site_link from Supabase data
                });
                widgetStrip.appendChild(widgetImage);
            });
        } catch (error) {
            console.error('Error creating widget:', error);
            widgetStrip.innerHTML = '<div style="text-align: center; padding: 10px; color: white;">Error loading widget images</div>';
        }
    }

    // Submission form handling
    if (submitForm) {
        submitForm.addEventListener('submit', async function(event) {
            event.preventDefault(); // Prevent default form submission

            const imageUrl = document.getElementById('image-url').value;
            const siteLink = document.getElementById('site-link').value;
            const tagsInput = document.getElementById('tags').value;
            const tagsArray = tagsInput.split(',').map(tag => tag.trim());

            // Insert submitted image data into Supabase
            const { error } = await supabase
                .from('submissions')
                .insert([
                    { image_url: imageUrl, site_link: siteLink, tags: tagsArray }
                ]);

            if (error) {
                console.error('Error submitting image:', error);
                win98Alert('Failed to submit image. Please try again.'); // Windows 98 style alert
            } else {
                console.log('Image submitted successfully!');
                // Show submission message
                if (submissionMessage) {
                    submissionMessage.style.display = 'block';
                }
                
                // Show embed instructions if they exist
                if (embedInstructions) {
                    embedInstructions.style.display = 'block';
                }
                
                submitForm.reset(); // Clear the form

                // Refresh image feed and widget
                populateImageFeed();
                createWidget();
                
                win98Alert('Image submitted successfully!'); // Windows 98 style alert
            }
        });
    }

    // Copy embed code functionality
    if (copyEmbedButton && embedCodeTextarea) {
        copyEmbedButton.addEventListener('click', () => {
            embedCodeTextarea.select();
            document.execCommand('copy');
            win98Alert('Embed code copied to clipboard!'); // Windows 98 style alert
        });
    }

    // Initialize the page
    populateImageFeed();
    createWidget();
});